#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WRYJC.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Teach")]
	public partial class DataWRYJCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertSysRoleAndSysPower(SysRoleAndSysPower instance);
    partial void UpdateSysRoleAndSysPower(SysRoleAndSysPower instance);
    partial void DeleteSysRoleAndSysPower(SysRoleAndSysPower instance);
    partial void InsertGasDayData(GasDayData instance);
    partial void UpdateGasDayData(GasDayData instance);
    partial void DeleteGasDayData(GasDayData instance);
    partial void InsertSysMenu(SysMenu instance);
    partial void UpdateSysMenu(SysMenu instance);
    partial void DeleteSysMenu(SysMenu instance);
    partial void InsertSysPower(SysPower instance);
    partial void UpdateSysPower(SysPower instance);
    partial void DeleteSysPower(SysPower instance);
    partial void InsertSysRole(SysRole instance);
    partial void UpdateSysRole(SysRole instance);
    partial void DeleteSysRole(SysRole instance);
    partial void InsertSysUserAndSysRole(SysUserAndSysRole instance);
    partial void UpdateSysUserAndSysRole(SysUserAndSysRole instance);
    partial void DeleteSysUserAndSysRole(SysUserAndSysRole instance);
    partial void InsertSysUser(SysUser instance);
    partial void UpdateSysUser(SysUser instance);
    partial void DeleteSysUser(SysUser instance);
    #endregion
		
		public DataWRYJCDataContext() : 
				base(global::WRYJC.DAL.Properties.Settings.Default.TeachConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataWRYJCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataWRYJCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataWRYJCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataWRYJCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SysRoleAndSysPower> SysRoleAndSysPower
		{
			get
			{
				return this.GetTable<SysRoleAndSysPower>();
			}
		}
		
		public System.Data.Linq.Table<GasDayData> GasDayData
		{
			get
			{
				return this.GetTable<GasDayData>();
			}
		}
		
		public System.Data.Linq.Table<SysMenu> SysMenu
		{
			get
			{
				return this.GetTable<SysMenu>();
			}
		}
		
		public System.Data.Linq.Table<SysPower> SysPower
		{
			get
			{
				return this.GetTable<SysPower>();
			}
		}
		
		public System.Data.Linq.Table<SysRole> SysRole
		{
			get
			{
				return this.GetTable<SysRole>();
			}
		}
		
		public System.Data.Linq.Table<SysUserAndSysRole> SysUserAndSysRole
		{
			get
			{
				return this.GetTable<SysUserAndSysRole>();
			}
		}
		
		public System.Data.Linq.Table<SysUser> SysUser
		{
			get
			{
				return this.GetTable<SysUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysRoleAndSysPower")]
	public partial class SysRoleAndSysPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SysRoleId;
		
		private int _SysPowerId;
		
		private EntityRef<SysPower> _SysPower;
		
		private EntityRef<SysRole> _SysRole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSysRoleIdChanging(int value);
    partial void OnSysRoleIdChanged();
    partial void OnSysPowerIdChanging(int value);
    partial void OnSysPowerIdChanged();
    #endregion
		
		public SysRoleAndSysPower()
		{
			this._SysPower = default(EntityRef<SysPower>);
			this._SysRole = default(EntityRef<SysRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._SysPower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysRoleId", DbType="Int NOT NULL")]
		public int SysRoleId
		{
			get
			{
				return this._SysRoleId;
			}
			set
			{
				if ((this._SysRoleId != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSysRoleIdChanging(value);
					this.SendPropertyChanging();
					this._SysRoleId = value;
					this.SendPropertyChanged("SysRoleId");
					this.OnSysRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysPowerId", DbType="Int NOT NULL")]
		public int SysPowerId
		{
			get
			{
				return this._SysPowerId;
			}
			set
			{
				if ((this._SysPowerId != value))
				{
					this.OnSysPowerIdChanging(value);
					this.SendPropertyChanging();
					this._SysPowerId = value;
					this.SendPropertyChanged("SysPowerId");
					this.OnSysPowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPower_SysRoleAndSysPower", Storage="_SysPower", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public SysPower SysPower
		{
			get
			{
				return this._SysPower.Entity;
			}
			set
			{
				SysPower previousValue = this._SysPower.Entity;
				if (((previousValue != value) 
							|| (this._SysPower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysPower.Entity = null;
						previousValue.SysRoleAndSysPower = null;
					}
					this._SysPower.Entity = value;
					if ((value != null))
					{
						value.SysRoleAndSysPower = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("SysPower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRoleAndSysPower", Storage="_SysRole", ThisKey="SysRoleId", OtherKey="Id", IsForeignKey=true)]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.SysRoleAndSysPower.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.SysRoleAndSysPower.Add(this);
						this._SysRoleId = value.Id;
					}
					else
					{
						this._SysRoleId = default(int);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GasDayData")]
	public partial class GasDayData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<decimal> _WasteObjectID;
		
		private string _PCode;
		
		private System.Nullable<System.DateTime> _ReceTime;
		
		private System.Nullable<double> _StrengthMax;
		
		private System.Nullable<double> _StrengthAvg;
		
		private System.Nullable<double> _StrengthMin;
		
		private System.Nullable<double> _FixStrength;
		
		private System.Nullable<double> _FlowMax;
		
		private System.Nullable<double> _FlowAvg;
		
		private System.Nullable<double> _FlowMin;
		
		private System.Nullable<double> _FixFlow;
		
		private System.Nullable<int> _IsException;
		
		private string _CorrectUnit;
		
		private string _CorrectUser;
		
		private System.Nullable<int> _DataType;
		
		private string _CorrectCause;
		
		private System.Nullable<System.DateTime> _CorrectTime;
		
		private System.Nullable<int> _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnWasteObjectIDChanging(System.Nullable<decimal> value);
    partial void OnWasteObjectIDChanged();
    partial void OnPCodeChanging(string value);
    partial void OnPCodeChanged();
    partial void OnReceTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReceTimeChanged();
    partial void OnStrengthMaxChanging(System.Nullable<double> value);
    partial void OnStrengthMaxChanged();
    partial void OnStrengthAvgChanging(System.Nullable<double> value);
    partial void OnStrengthAvgChanged();
    partial void OnStrengthMinChanging(System.Nullable<double> value);
    partial void OnStrengthMinChanged();
    partial void OnFixStrengthChanging(System.Nullable<double> value);
    partial void OnFixStrengthChanged();
    partial void OnFlowMaxChanging(System.Nullable<double> value);
    partial void OnFlowMaxChanged();
    partial void OnFlowAvgChanging(System.Nullable<double> value);
    partial void OnFlowAvgChanged();
    partial void OnFlowMinChanging(System.Nullable<double> value);
    partial void OnFlowMinChanged();
    partial void OnFixFlowChanging(System.Nullable<double> value);
    partial void OnFixFlowChanged();
    partial void OnIsExceptionChanging(System.Nullable<int> value);
    partial void OnIsExceptionChanged();
    partial void OnCorrectUnitChanging(string value);
    partial void OnCorrectUnitChanged();
    partial void OnCorrectUserChanging(string value);
    partial void OnCorrectUserChanged();
    partial void OnDataTypeChanging(System.Nullable<int> value);
    partial void OnDataTypeChanged();
    partial void OnCorrectCauseChanging(string value);
    partial void OnCorrectCauseChanged();
    partial void OnCorrectTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCorrectTimeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public GasDayData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasteObjectID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> WasteObjectID
		{
			get
			{
				return this._WasteObjectID;
			}
			set
			{
				if ((this._WasteObjectID != value))
				{
					this.OnWasteObjectIDChanging(value);
					this.SendPropertyChanging();
					this._WasteObjectID = value;
					this.SendPropertyChanged("WasteObjectID");
					this.OnWasteObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCode", DbType="NVarChar(50)")]
		public string PCode
		{
			get
			{
				return this._PCode;
			}
			set
			{
				if ((this._PCode != value))
				{
					this.OnPCodeChanging(value);
					this.SendPropertyChanging();
					this._PCode = value;
					this.SendPropertyChanged("PCode");
					this.OnPCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceTime
		{
			get
			{
				return this._ReceTime;
			}
			set
			{
				if ((this._ReceTime != value))
				{
					this.OnReceTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceTime = value;
					this.SendPropertyChanged("ReceTime");
					this.OnReceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthMax", DbType="Float")]
		public System.Nullable<double> StrengthMax
		{
			get
			{
				return this._StrengthMax;
			}
			set
			{
				if ((this._StrengthMax != value))
				{
					this.OnStrengthMaxChanging(value);
					this.SendPropertyChanging();
					this._StrengthMax = value;
					this.SendPropertyChanged("StrengthMax");
					this.OnStrengthMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthAvg", DbType="Float")]
		public System.Nullable<double> StrengthAvg
		{
			get
			{
				return this._StrengthAvg;
			}
			set
			{
				if ((this._StrengthAvg != value))
				{
					this.OnStrengthAvgChanging(value);
					this.SendPropertyChanging();
					this._StrengthAvg = value;
					this.SendPropertyChanged("StrengthAvg");
					this.OnStrengthAvgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrengthMin", DbType="Float")]
		public System.Nullable<double> StrengthMin
		{
			get
			{
				return this._StrengthMin;
			}
			set
			{
				if ((this._StrengthMin != value))
				{
					this.OnStrengthMinChanging(value);
					this.SendPropertyChanging();
					this._StrengthMin = value;
					this.SendPropertyChanged("StrengthMin");
					this.OnStrengthMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixStrength", DbType="Float")]
		public System.Nullable<double> FixStrength
		{
			get
			{
				return this._FixStrength;
			}
			set
			{
				if ((this._FixStrength != value))
				{
					this.OnFixStrengthChanging(value);
					this.SendPropertyChanging();
					this._FixStrength = value;
					this.SendPropertyChanged("FixStrength");
					this.OnFixStrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowMax", DbType="Float")]
		public System.Nullable<double> FlowMax
		{
			get
			{
				return this._FlowMax;
			}
			set
			{
				if ((this._FlowMax != value))
				{
					this.OnFlowMaxChanging(value);
					this.SendPropertyChanging();
					this._FlowMax = value;
					this.SendPropertyChanged("FlowMax");
					this.OnFlowMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowAvg", DbType="Float")]
		public System.Nullable<double> FlowAvg
		{
			get
			{
				return this._FlowAvg;
			}
			set
			{
				if ((this._FlowAvg != value))
				{
					this.OnFlowAvgChanging(value);
					this.SendPropertyChanging();
					this._FlowAvg = value;
					this.SendPropertyChanged("FlowAvg");
					this.OnFlowAvgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowMin", DbType="Float")]
		public System.Nullable<double> FlowMin
		{
			get
			{
				return this._FlowMin;
			}
			set
			{
				if ((this._FlowMin != value))
				{
					this.OnFlowMinChanging(value);
					this.SendPropertyChanging();
					this._FlowMin = value;
					this.SendPropertyChanged("FlowMin");
					this.OnFlowMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixFlow", DbType="Float")]
		public System.Nullable<double> FixFlow
		{
			get
			{
				return this._FixFlow;
			}
			set
			{
				if ((this._FixFlow != value))
				{
					this.OnFixFlowChanging(value);
					this.SendPropertyChanging();
					this._FixFlow = value;
					this.SendPropertyChanged("FixFlow");
					this.OnFixFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsException", DbType="Int")]
		public System.Nullable<int> IsException
		{
			get
			{
				return this._IsException;
			}
			set
			{
				if ((this._IsException != value))
				{
					this.OnIsExceptionChanging(value);
					this.SendPropertyChanging();
					this._IsException = value;
					this.SendPropertyChanged("IsException");
					this.OnIsExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectUnit", DbType="NVarChar(50)")]
		public string CorrectUnit
		{
			get
			{
				return this._CorrectUnit;
			}
			set
			{
				if ((this._CorrectUnit != value))
				{
					this.OnCorrectUnitChanging(value);
					this.SendPropertyChanging();
					this._CorrectUnit = value;
					this.SendPropertyChanged("CorrectUnit");
					this.OnCorrectUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectUser", DbType="NVarChar(50)")]
		public string CorrectUser
		{
			get
			{
				return this._CorrectUser;
			}
			set
			{
				if ((this._CorrectUser != value))
				{
					this.OnCorrectUserChanging(value);
					this.SendPropertyChanging();
					this._CorrectUser = value;
					this.SendPropertyChanged("CorrectUser");
					this.OnCorrectUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int")]
		public System.Nullable<int> DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectCause", DbType="NVarChar(500)")]
		public string CorrectCause
		{
			get
			{
				return this._CorrectCause;
			}
			set
			{
				if ((this._CorrectCause != value))
				{
					this.OnCorrectCauseChanging(value);
					this.SendPropertyChanging();
					this._CorrectCause = value;
					this.SendPropertyChanged("CorrectCause");
					this.OnCorrectCauseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CorrectTime
		{
			get
			{
				return this._CorrectTime;
			}
			set
			{
				if ((this._CorrectTime != value))
				{
					this.OnCorrectTimeChanging(value);
					this.SendPropertyChanging();
					this._CorrectTime = value;
					this.SendPropertyChanged("CorrectTime");
					this.OnCorrectTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysMenu")]
	public partial class SysMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MasterID;
		
		private string _MenuIcon;
		
		private string _MenuName;
		
		private string _MenuUrl;
		
		private System.DateTime _EditTime;
		
		private string _Remark;
		
		private int _TheOrder;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<SysMenu> _SysMenu2;
		
		private EntitySet<SysPower> _SysPower;
		
		private EntityRef<SysMenu> _SysMenu1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMasterIDChanging(System.Nullable<int> value);
    partial void OnMasterIDChanged();
    partial void OnMenuIconChanging(string value);
    partial void OnMenuIconChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuUrlChanging(string value);
    partial void OnMenuUrlChanged();
    partial void OnEditTimeChanging(System.DateTime value);
    partial void OnEditTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTheOrderChanging(int value);
    partial void OnTheOrderChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public SysMenu()
		{
			this._SysMenu2 = new EntitySet<SysMenu>(new Action<SysMenu>(this.attach_SysMenu2), new Action<SysMenu>(this.detach_SysMenu2));
			this._SysPower = new EntitySet<SysPower>(new Action<SysPower>(this.attach_SysPower), new Action<SysPower>(this.detach_SysPower));
			this._SysMenu1 = default(EntityRef<SysMenu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterID", DbType="Int")]
		public System.Nullable<int> MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._SysMenu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuIcon", DbType="VarChar(20)")]
		public string MenuIcon
		{
			get
			{
				return this._MenuIcon;
			}
			set
			{
				if ((this._MenuIcon != value))
				{
					this.OnMenuIconChanging(value);
					this.SendPropertyChanging();
					this._MenuIcon = value;
					this.SendPropertyChanged("MenuIcon");
					this.OnMenuIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuUrl", DbType="VarChar(500)")]
		public string MenuUrl
		{
			get
			{
				return this._MenuUrl;
			}
			set
			{
				if ((this._MenuUrl != value))
				{
					this.OnMenuUrlChanging(value);
					this.SendPropertyChanging();
					this._MenuUrl = value;
					this.SendPropertyChanged("MenuUrl");
					this.OnMenuUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditTime", DbType="DateTime NOT NULL")]
		public System.DateTime EditTime
		{
			get
			{
				return this._EditTime;
			}
			set
			{
				if ((this._EditTime != value))
				{
					this.OnEditTimeChanging(value);
					this.SendPropertyChanging();
					this._EditTime = value;
					this.SendPropertyChanged("EditTime");
					this.OnEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheOrder", DbType="Int NOT NULL")]
		public int TheOrder
		{
			get
			{
				return this._TheOrder;
			}
			set
			{
				if ((this._TheOrder != value))
				{
					this.OnTheOrderChanging(value);
					this.SendPropertyChanging();
					this._TheOrder = value;
					this.SendPropertyChanged("TheOrder");
					this.OnTheOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysMenu_SysMenu", Storage="_SysMenu2", ThisKey="ID", OtherKey="MasterID")]
		public EntitySet<SysMenu> SysMenu2
		{
			get
			{
				return this._SysMenu2;
			}
			set
			{
				this._SysMenu2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysMenu_SysPower", Storage="_SysPower", ThisKey="ID", OtherKey="SysMenuID")]
		public EntitySet<SysPower> SysPower
		{
			get
			{
				return this._SysPower;
			}
			set
			{
				this._SysPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysMenu_SysMenu", Storage="_SysMenu1", ThisKey="MasterID", OtherKey="ID", IsForeignKey=true)]
		public SysMenu SysMenu1
		{
			get
			{
				return this._SysMenu1.Entity;
			}
			set
			{
				SysMenu previousValue = this._SysMenu1.Entity;
				if (((previousValue != value) 
							|| (this._SysMenu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysMenu1.Entity = null;
						previousValue.SysMenu2.Remove(this);
					}
					this._SysMenu1.Entity = value;
					if ((value != null))
					{
						value.SysMenu2.Add(this);
						this._MasterID = value.ID;
					}
					else
					{
						this._MasterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SysMenu1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysMenu2(SysMenu entity)
		{
			this.SendPropertyChanging();
			entity.SysMenu1 = this;
		}
		
		private void detach_SysMenu2(SysMenu entity)
		{
			this.SendPropertyChanging();
			entity.SysMenu1 = null;
		}
		
		private void attach_SysPower(SysPower entity)
		{
			this.SendPropertyChanging();
			entity.SysMenu = this;
		}
		
		private void detach_SysPower(SysPower entity)
		{
			this.SendPropertyChanging();
			entity.SysMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysPower")]
	public partial class SysPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SysMenuID;
		
		private string _PowerIcon;
		
		private string _PowerName;
		
		private string _PowerUrl;
		
		private System.Nullable<System.DateTime> _EditTime;
		
		private string _Remark;
		
		private EntityRef<SysRoleAndSysPower> _SysRoleAndSysPower;
		
		private EntityRef<SysMenu> _SysMenu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSysMenuIDChanging(System.Nullable<int> value);
    partial void OnSysMenuIDChanged();
    partial void OnPowerIconChanging(string value);
    partial void OnPowerIconChanged();
    partial void OnPowerNameChanging(string value);
    partial void OnPowerNameChanged();
    partial void OnPowerUrlChanging(string value);
    partial void OnPowerUrlChanged();
    partial void OnEditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEditTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SysPower()
		{
			this._SysRoleAndSysPower = default(EntityRef<SysRoleAndSysPower>);
			this._SysMenu = default(EntityRef<SysMenu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysMenuID", DbType="Int")]
		public System.Nullable<int> SysMenuID
		{
			get
			{
				return this._SysMenuID;
			}
			set
			{
				if ((this._SysMenuID != value))
				{
					if (this._SysMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSysMenuIDChanging(value);
					this.SendPropertyChanging();
					this._SysMenuID = value;
					this.SendPropertyChanged("SysMenuID");
					this.OnSysMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerIcon", DbType="NVarChar(100)")]
		public string PowerIcon
		{
			get
			{
				return this._PowerIcon;
			}
			set
			{
				if ((this._PowerIcon != value))
				{
					this.OnPowerIconChanging(value);
					this.SendPropertyChanging();
					this._PowerIcon = value;
					this.SendPropertyChanged("PowerIcon");
					this.OnPowerIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerName", DbType="NChar(10)")]
		public string PowerName
		{
			get
			{
				return this._PowerName;
			}
			set
			{
				if ((this._PowerName != value))
				{
					this.OnPowerNameChanging(value);
					this.SendPropertyChanging();
					this._PowerName = value;
					this.SendPropertyChanged("PowerName");
					this.OnPowerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerUrl", DbType="NChar(10)")]
		public string PowerUrl
		{
			get
			{
				return this._PowerUrl;
			}
			set
			{
				if ((this._PowerUrl != value))
				{
					this.OnPowerUrlChanging(value);
					this.SendPropertyChanging();
					this._PowerUrl = value;
					this.SendPropertyChanged("PowerUrl");
					this.OnPowerUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EditTime
		{
			get
			{
				return this._EditTime;
			}
			set
			{
				if ((this._EditTime != value))
				{
					this.OnEditTimeChanging(value);
					this.SendPropertyChanging();
					this._EditTime = value;
					this.SendPropertyChanged("EditTime");
					this.OnEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPower_SysRoleAndSysPower", Storage="_SysRoleAndSysPower", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public SysRoleAndSysPower SysRoleAndSysPower
		{
			get
			{
				return this._SysRoleAndSysPower.Entity;
			}
			set
			{
				SysRoleAndSysPower previousValue = this._SysRoleAndSysPower.Entity;
				if (((previousValue != value) 
							|| (this._SysRoleAndSysPower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRoleAndSysPower.Entity = null;
						previousValue.SysPower = null;
					}
					this._SysRoleAndSysPower.Entity = value;
					if ((value != null))
					{
						value.SysPower = this;
					}
					this.SendPropertyChanged("SysRoleAndSysPower");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysMenu_SysPower", Storage="_SysMenu", ThisKey="SysMenuID", OtherKey="ID", IsForeignKey=true)]
		public SysMenu SysMenu
		{
			get
			{
				return this._SysMenu.Entity;
			}
			set
			{
				SysMenu previousValue = this._SysMenu.Entity;
				if (((previousValue != value) 
							|| (this._SysMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysMenu.Entity = null;
						previousValue.SysPower.Remove(this);
					}
					this._SysMenu.Entity = value;
					if ((value != null))
					{
						value.SysPower.Add(this);
						this._SysMenuID = value.ID;
					}
					else
					{
						this._SysMenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SysMenu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysRole")]
	public partial class SysRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RoleName;
		
		private int _GroupID;
		
		private System.Nullable<System.DateTime> _EditTime;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private int _Status;
		
		private string _Remark;
		
		private EntitySet<SysRoleAndSysPower> _SysRoleAndSysPower;
		
		private EntitySet<SysUserAndSysRole> _SysUserAndSysRole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(int value);
    partial void OnRoleNameChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnEditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEditTimeChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SysRole()
		{
			this._SysRoleAndSysPower = new EntitySet<SysRoleAndSysPower>(new Action<SysRoleAndSysPower>(this.attach_SysRoleAndSysPower), new Action<SysRoleAndSysPower>(this.detach_SysRoleAndSysPower));
			this._SysUserAndSysRole = new EntitySet<SysUserAndSysRole>(new Action<SysUserAndSysRole>(this.attach_SysUserAndSysRole), new Action<SysUserAndSysRole>(this.detach_SysUserAndSysRole));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="Int NOT NULL")]
		public int RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditTime", DbType="Date")]
		public System.Nullable<System.DateTime> EditTime
		{
			get
			{
				return this._EditTime;
			}
			set
			{
				if ((this._EditTime != value))
				{
					this.OnEditTimeChanging(value);
					this.SendPropertyChanging();
					this._EditTime = value;
					this.SendPropertyChanged("EditTime");
					this.OnEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="Date")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRoleAndSysPower", Storage="_SysRoleAndSysPower", ThisKey="Id", OtherKey="SysRoleId")]
		public EntitySet<SysRoleAndSysPower> SysRoleAndSysPower
		{
			get
			{
				return this._SysRoleAndSysPower;
			}
			set
			{
				this._SysRoleAndSysPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysUserAndSysRole", Storage="_SysUserAndSysRole", ThisKey="Id", OtherKey="SysRoleId")]
		public EntitySet<SysUserAndSysRole> SysUserAndSysRole
		{
			get
			{
				return this._SysUserAndSysRole;
			}
			set
			{
				this._SysUserAndSysRole.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysRoleAndSysPower(SysRoleAndSysPower entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_SysRoleAndSysPower(SysRoleAndSysPower entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
		
		private void attach_SysUserAndSysRole(SysUserAndSysRole entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_SysUserAndSysRole(SysUserAndSysRole entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysUserAndSysRole")]
	public partial class SysUserAndSysRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SysUserId;
		
		private int _SysRoleId;
		
		private EntityRef<SysRole> _SysRole;
		
		private EntityRef<SysUser> _SysUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSysUserIdChanging(int value);
    partial void OnSysUserIdChanged();
    partial void OnSysRoleIdChanging(int value);
    partial void OnSysRoleIdChanged();
    #endregion
		
		public SysUserAndSysRole()
		{
			this._SysRole = default(EntityRef<SysRole>);
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysUserId", DbType="Int NOT NULL")]
		public int SysUserId
		{
			get
			{
				return this._SysUserId;
			}
			set
			{
				if ((this._SysUserId != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSysUserIdChanging(value);
					this.SendPropertyChanging();
					this._SysUserId = value;
					this.SendPropertyChanged("SysUserId");
					this.OnSysUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysRoleId", DbType="Int NOT NULL")]
		public int SysRoleId
		{
			get
			{
				return this._SysRoleId;
			}
			set
			{
				if ((this._SysRoleId != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSysRoleIdChanging(value);
					this.SendPropertyChanging();
					this._SysRoleId = value;
					this.SendPropertyChanged("SysRoleId");
					this.OnSysRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysUserAndSysRole", Storage="_SysRole", ThisKey="SysRoleId", OtherKey="Id", IsForeignKey=true)]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.SysUserAndSysRole.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.SysUserAndSysRole.Add(this);
						this._SysRoleId = value.Id;
					}
					else
					{
						this._SysRoleId = default(int);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_SysUserAndSysRole", Storage="_SysUser", ThisKey="SysUserId", OtherKey="Id", IsForeignKey=true)]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.SysUserAndSysRole.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.SysUserAndSysRole.Add(this);
						this._SysUserId = value.Id;
					}
					else
					{
						this._SysUserId = default(int);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysUser")]
	public partial class SysUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LoginName;
		
		private string _Pwd;
		
		private string _TrueName;
		
		private System.Nullable<int> _Sex;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _IdCard;
		
		private string _MobilePhone;
		
		private string _Email;
		
		private System.Nullable<int> _Department;
		
		private string _Address;
		
		private string _ZipCode;
		
		private string _HeadIcon;
		
		private string _WeixinId;
		
		private System.Nullable<System.DateTime> _EditTime;
		
		private System.Nullable<System.DateTime> _DelTime;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private string _Remark;
		
		private EntitySet<SysUserAndSysRole> _SysUserAndSysRole;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnTrueNameChanging(string value);
    partial void OnTrueNameChanged();
    partial void OnSexChanging(System.Nullable<int> value);
    partial void OnSexChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnIdCardChanging(string value);
    partial void OnIdCardChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDepartmentChanging(System.Nullable<int> value);
    partial void OnDepartmentChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnHeadIconChanging(string value);
    partial void OnHeadIconChanged();
    partial void OnWeixinIdChanging(string value);
    partial void OnWeixinIdChanged();
    partial void OnEditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEditTimeChanged();
    partial void OnDelTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDelTimeChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SysUser()
		{
			this._SysUserAndSysRole = new EntitySet<SysUserAndSysRole>(new Action<SysUserAndSysRole>(this.attach_SysUserAndSysRole), new Action<SysUserAndSysRole>(this.detach_SysUserAndSysRole));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrueName", DbType="NVarChar(50)")]
		public string TrueName
		{
			get
			{
				return this._TrueName;
			}
			set
			{
				if ((this._TrueName != value))
				{
					this.OnTrueNameChanging(value);
					this.SendPropertyChanging();
					this._TrueName = value;
					this.SendPropertyChanged("TrueName");
					this.OnTrueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int")]
		public System.Nullable<int> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCard", DbType="NVarChar(20)")]
		public string IdCard
		{
			get
			{
				return this._IdCard;
			}
			set
			{
				if ((this._IdCard != value))
				{
					this.OnIdCardChanging(value);
					this.SendPropertyChanging();
					this._IdCard = value;
					this.SendPropertyChanged("IdCard");
					this.OnIdCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="Int")]
		public System.Nullable<int> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadIcon", DbType="NVarChar(100)")]
		public string HeadIcon
		{
			get
			{
				return this._HeadIcon;
			}
			set
			{
				if ((this._HeadIcon != value))
				{
					this.OnHeadIconChanging(value);
					this.SendPropertyChanging();
					this._HeadIcon = value;
					this.SendPropertyChanged("HeadIcon");
					this.OnHeadIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeixinId", DbType="NVarChar(50)")]
		public string WeixinId
		{
			get
			{
				return this._WeixinId;
			}
			set
			{
				if ((this._WeixinId != value))
				{
					this.OnWeixinIdChanging(value);
					this.SendPropertyChanging();
					this._WeixinId = value;
					this.SendPropertyChanged("WeixinId");
					this.OnWeixinIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditTime", DbType="Date")]
		public System.Nullable<System.DateTime> EditTime
		{
			get
			{
				return this._EditTime;
			}
			set
			{
				if ((this._EditTime != value))
				{
					this.OnEditTimeChanging(value);
					this.SendPropertyChanging();
					this._EditTime = value;
					this.SendPropertyChanged("EditTime");
					this.OnEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelTime", DbType="Date")]
		public System.Nullable<System.DateTime> DelTime
		{
			get
			{
				return this._DelTime;
			}
			set
			{
				if ((this._DelTime != value))
				{
					this.OnDelTimeChanging(value);
					this.SendPropertyChanging();
					this._DelTime = value;
					this.SendPropertyChanged("DelTime");
					this.OnDelTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="Date")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_SysUserAndSysRole", Storage="_SysUserAndSysRole", ThisKey="Id", OtherKey="SysUserId")]
		public EntitySet<SysUserAndSysRole> SysUserAndSysRole
		{
			get
			{
				return this._SysUserAndSysRole;
			}
			set
			{
				this._SysUserAndSysRole.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysUserAndSysRole(SysUserAndSysRole entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_SysUserAndSysRole(SysUserAndSysRole entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
	}
}
#pragma warning restore 1591
